-- Generated by Oracle SQL Developer Data Modeler 3.3.0.747
--   at:        2014-04-23 09:57:07 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




CREATE TABLE Adresse
  (
    id NUMBER (7) NOT NULL ,
    libelle NVARCHAR2 (30) ,
    nom NVARCHAR2 (30) ,
    prenom NVARCHAR2 (30) ,
    adresse NVARCHAR2 (50) NOT NULL ,
    complement NVARCHAR2 (50) ,
    ville NVARCHAR2 (40) NOT NULL ,
    codePostal NVARCHAR2 (6) NOT NULL ,
    pays NVARCHAR2 (40) NOT NULL ,
    commentaire CLOB ,
    refClient      NUMBER (6) ,
    refFournisseur NUMBER (3)
  ) ;
ALTER TABLE Adresse ADD CONSTRAINT Adresse_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Categorie
  (
    id NUMBER (4) NOT NULL ,
    libelle NVARCHAR2 (30) NOT NULL ,
    refParent NUMBER (4)
  ) ;
ALTER TABLE Categorie ADD CONSTRAINT Categorie_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Civilite
  (
    id NUMBER (1) NOT NULL ,
    libelle NVARCHAR2 (30) NOT NULL
  ) ;
ALTER TABLE Civilite ADD CONSTRAINT Civilite_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Client
  (
    id NUMBER (6) NOT NULL ,
    pseudo NVARCHAR2 (20) NOT NULL ,
    email NVARCHAR2 (40) NOT NULL ,
    nom NVARCHAR2 (40) NOT NULL ,
    prenom NVARCHAR2 (40) NOT NULL ,
    refCivilite     NUMBER (1) NOT NULL ,
    dateDeNaissance DATE NOT NULL
  ) ;
ALTER TABLE Client ADD CONSTRAINT Client_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Commande
  (
    id NUMBER (8) NOT NULL ,
    REFERENCE NVARCHAR2 (30) NOT NULL ,
    "date"                DATE NOT NULL ,
    prixTotal             NUMBER (10,2) NOT NULL ,
    refClient             NUMBER (6) NOT NULL ,
    refMoyenPaiement      NUMBER (2) NOT NULL ,
    refExpediteur         NUMBER (2) NOT NULL ,
    refAdresseLivraison   NUMBER (7) NOT NULL ,
    refAdresseFacturation NUMBER (7) NOT NULL ,
    annulee               CHAR (1) DEFAULT '0' NOT NULL
  ) ;
ALTER TABLE Commande ADD CONSTRAINT Commande_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE CommandeFournisseur
  (
    id             NUMBER (5) NOT NULL ,
    refFournisseur NUMBER (3) NOT NULL ,
    "date"         DATE NOT NULL ,
    prixTotal      NUMBER (8,2) NOT NULL
  ) ;
ALTER TABLE CommandeFournisseur ADD CONSTRAINT CommandeFournisseur_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE CommandeFournisseur_Produit
  (
    refCommandeFournisseur NUMBER (5) NOT NULL ,
    refProduit             NUMBER (4) NOT NULL ,
    quantite               NUMBER (6) NOT NULL ,
    prix                   NUMBER (8,2) NOT NULL ,
    tva                    NUMBER (4,2) NOT NULL
  ) ;
ALTER TABLE CommandeFournisseur_Produit ADD CONSTRAINT CommandeFournisseur_Produit_PK PRIMARY KEY
(
  refCommandeFournisseur, refProduit
)
;

CREATE TABLE CommandeProduit
  (
    id          NUMBER (10) NOT NULL ,
    refCommande NUMBER (8) NOT NULL ,
    refProduit  NUMBER (4) NOT NULL ,
    quantite    NUMBER (4) NOT NULL ,
    prix        NUMBER (8,2) NOT NULL ,
    tva         NUMBER (4,2) NOT NULL
  ) ;
ALTER TABLE CommandeProduit ADD CONSTRAINT CommandeProduit_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Commande_StatutCommande
  (
    id                NUMBER (8) NOT NULL ,
    refCommande       NUMBER (8) NOT NULL ,
    refStatutCommande NUMBER (2) NOT NULL ,
    "date"            DATE NOT NULL ,
    finLivraison      CHAR (1) NOT NULL
  ) ;
ALTER TABLE Commande_StatutCommande ADD CONSTRAINT Commande_StatutCommande_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Commande_StatutPaiement
  (
    refCommande       NUMBER (8) NOT NULL ,
    refStatutPaiement NUMBER (2) NOT NULL ,
    "date"            DATE NOT NULL ,
    finPaiement       CHAR (1) DEFAULT '1' NOT NULL
  ) ;
ALTER TABLE Commande_StatutPaiement ADD CONSTRAINT Commande_StatutPaiement_PK PRIMARY KEY
(
  refCommande, refStatutPaiement
)
;

CREATE TABLE Expediteur
  (
    id NUMBER (2) NOT NULL ,
    libelle NVARCHAR2 (20) NOT NULL ,
    prix NUMBER (6,2) NOT NULL
  ) ;
ALTER TABLE Expediteur ADD CONSTRAINT Expediteur_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Fournisseur
  (
    id NUMBER (3) NOT NULL ,
    nom NVARCHAR2 (30) NOT NULL ,
    refAdresse NUMBER (7) NOT NULL
  ) ;
ALTER TABLE Fournisseur ADD CONSTRAINT Fournisseur_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE MoyenPaiement
  (
    id NUMBER (2) NOT NULL ,
    libelle NVARCHAR2 (30) NOT NULL
  ) ;
ALTER TABLE MoyenPaiement ADD CONSTRAINT MoyenPaiement_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Produit
  (
    id NUMBER (4) NOT NULL ,
    REFERENCE NVARCHAR2 (30) ,
    libelle NVARCHAR2 (30) NOT NULL ,
    prix           NUMBER (8,2) NOT NULL ,
    stock          NUMBER (7) NOT NULL ,
    refCategorie   NUMBER (4) NOT NULL ,
    refFournisseur NUMBER (3) NOT NULL ,
    refTva         NUMBER (2) NOT NULL
  ) ;
ALTER TABLE Produit ADD CONSTRAINT Produit_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE StatutCommande
  (
    id NUMBER (2) NOT NULL ,
    libelle NVARCHAR2 (20) NOT NULL
  ) ;
ALTER TABLE StatutCommande ADD CONSTRAINT StatutCommande_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE StatutPaiement
  (
    id NUMBER (2) NOT NULL ,
    libelle NVARCHAR2 (30) NOT NULL
  ) ;
ALTER TABLE StatutPaiement ADD CONSTRAINT StatutPaiement_PK PRIMARY KEY
(
  id
)
;

CREATE TABLE Tva
  (
    id NUMBER (2) NOT NULL ,
    libelle NVARCHAR2 (20) NOT NULL ,
    valeur NUMBER (4,2) NOT NULL
  ) ;
ALTER TABLE Tva ADD CONSTRAINT Tva_PK PRIMARY KEY
(
  id
)
;

ALTER TABLE Adresse ADD CONSTRAINT Adresse_Client_FK FOREIGN KEY ( refClient ) REFERENCES Client ( id ) ;

ALTER TABLE Adresse ADD CONSTRAINT Adresse_Fournisseur_FK FOREIGN KEY ( refFournisseur ) REFERENCES Fournisseur ( id ) ;

ALTER TABLE CommandeFournisseur ADD CONSTRAINT CF_Fournisseur_FK FOREIGN KEY ( refFournisseur ) REFERENCES Fournisseur ( id ) ;

ALTER TABLE CommandeFournisseur_Produit ADD CONSTRAINT CF_Produit_CF_FK FOREIGN KEY ( refCommandeFournisseur ) REFERENCES CommandeFournisseur ( id ) ;

ALTER TABLE CommandeFournisseur_Produit ADD CONSTRAINT CF_Produit_Produit_FK FOREIGN KEY ( refProduit ) REFERENCES Produit ( id ) ;

ALTER TABLE Categorie ADD CONSTRAINT Categorie_Categorie_FK FOREIGN KEY ( refParent ) REFERENCES Categorie ( id ) ;

ALTER TABLE Client ADD CONSTRAINT Client_Civilite_FK FOREIGN KEY ( refCivilite ) REFERENCES Civilite ( id ) ;

ALTER TABLE CommandeProduit ADD CONSTRAINT CommandeProduit_Commande_FK FOREIGN KEY ( refCommande ) REFERENCES Commande ( id ) ;

ALTER TABLE CommandeProduit ADD CONSTRAINT CommandeProduit_Produit_FK FOREIGN KEY ( refProduit ) REFERENCES Produit ( id ) ;

ALTER TABLE Commande ADD CONSTRAINT Commande_Adresse_FK FOREIGN KEY ( refAdresseLivraison ) REFERENCES Adresse ( id ) ;

ALTER TABLE Commande ADD CONSTRAINT Commande_Adresse_FKv2 FOREIGN KEY ( refAdresseFacturation ) REFERENCES Adresse ( id ) ;

ALTER TABLE Commande ADD CONSTRAINT Commande_Client_FK FOREIGN KEY ( refClient ) REFERENCES Client ( id ) ;

ALTER TABLE Commande ADD CONSTRAINT Commande_Expediteur_FK FOREIGN KEY ( refExpediteur ) REFERENCES Expediteur ( id ) ;

ALTER TABLE Commande ADD CONSTRAINT Commande_MoyenPaiement_FK FOREIGN KEY ( refMoyenPaiement ) REFERENCES MoyenPaiement ( id ) ;

ALTER TABLE Commande_StatutCommande ADD CONSTRAINT Commande_SC_SC_FK FOREIGN KEY ( refStatutCommande ) REFERENCES StatutCommande ( id ) ;

ALTER TABLE Commande_StatutPaiement ADD CONSTRAINT Commande_SP_Commande_FK FOREIGN KEY ( refCommande ) REFERENCES Commande ( id ) ;

ALTER TABLE Commande_StatutPaiement ADD CONSTRAINT Commande_SP_StatutPaiement_FK FOREIGN KEY ( refStatutPaiement ) REFERENCES StatutPaiement ( id ) ;

ALTER TABLE Fournisseur ADD CONSTRAINT Fournisseur_Adresse_FK FOREIGN KEY ( refAdresse ) REFERENCES Adresse ( id ) ;

ALTER TABLE Produit ADD CONSTRAINT Produit_Categorie_FK FOREIGN KEY ( refCategorie ) REFERENCES Categorie ( id ) ;

ALTER TABLE Produit ADD CONSTRAINT Produit_Tva_FK FOREIGN KEY ( refTva ) REFERENCES Tva ( id ) ;

ALTER TABLE Commande_StatutCommande ADD CONSTRAINT StatutCommande_Commande_FK FOREIGN KEY ( refCommande ) REFERENCES Commande ( id ) ;

CREATE SEQUENCE Adresse_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Adresse_id_TRG BEFORE
  INSERT ON Adresse FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Adresse_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Categorie_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Categorie_id_TRG BEFORE
  INSERT ON Categorie FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Categorie_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Civilite_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Civilite_id_TRG BEFORE
  INSERT ON Civilite FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Civilite_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Client_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Client_id_TRG BEFORE
  INSERT ON Client FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Client_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Commande_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Commande_id_TRG BEFORE
  INSERT ON Commande FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Commande_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE CommandeFournisseur_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER CommandeFournisseur_id_TRG BEFORE
  INSERT ON CommandeFournisseur FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT CommandeFournisseur_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE CommandeProduit_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER CommandeProduit_id_TRG BEFORE
  INSERT ON CommandeProduit FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT CommandeProduit_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Commande_StatutCommande_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Commande_StatutCommande_id_TRG BEFORE
  INSERT ON Commande_StatutCommande FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Commande_StatutCommande_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Expediteur_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Expediteur_id_TRG BEFORE
  INSERT ON Expediteur FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Expediteur_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Fournisseur_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Fournisseur_id_TRG BEFORE
  INSERT ON Fournisseur FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Fournisseur_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE MoyenPaiement_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER MoyenPaiement_id_TRG BEFORE
  INSERT ON MoyenPaiement FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT MoyenPaiement_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Produit_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Produit_id_TRG BEFORE
  INSERT ON Produit FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Produit_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE StatutCommande_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER StatutCommande_id_TRG BEFORE
  INSERT ON StatutCommande FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT StatutCommande_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE StatutPaiement_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER StatutPaiement_id_TRG BEFORE
  INSERT ON StatutPaiement FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT StatutPaiement_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/

CREATE SEQUENCE Tva_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Tva_id_TRG BEFORE
  INSERT ON Tva FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN
  SELECT Tva_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL;
END;
/


-- Oracle SQL Developer Data Modeler Summary Report:
--
-- CREATE TABLE                            17
-- CREATE INDEX                             0
-- ALTER TABLE                             38
-- CREATE VIEW                              0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          15
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         15
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
--
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
--
-- ERRORS                                   0
-- WARNINGS                                 0
